//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 colors.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 1 files.
  struct file {
    /// Resource file `GoogleService-Info.plist`.
    static let googleServiceInfoPlist = Rswift.FileResource(bundle: R.hostingBundle, name: "GoogleService-Info", pathExtension: "plist")
    
    /// `bundle.url(forResource: "GoogleService-Info", withExtension: "plist")`
    static func googleServiceInfoPlist(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.googleServiceInfoPlist
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 7 images.
  struct image {
    /// Image `add-user`.
    static let addUser = Rswift.ImageResource(bundle: R.hostingBundle, name: "add-user")
    /// Image `all-customer`.
    static let allCustomer = Rswift.ImageResource(bundle: R.hostingBundle, name: "all-customer")
    /// Image `ic_app_nika`.
    static let ic_app_nika = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_app_nika")
    /// Image `ic_done_white`.
    static let ic_done_white = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_done_white")
    /// Image `ic_exit_to_app_white_36pt`.
    static let ic_exit_to_app_white_36pt = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_exit_to_app_white_36pt")
    /// Image `ic_remove_red_eye`.
    static let ic_remove_red_eye = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_remove_red_eye")
    /// Image `search`.
    static let search = Rswift.ImageResource(bundle: R.hostingBundle, name: "search")
    
    /// `UIImage(named: "add-user", bundle: ..., traitCollection: ...)`
    static func addUser(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.addUser, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "all-customer", bundle: ..., traitCollection: ...)`
    static func allCustomer(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.allCustomer, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ic_app_nika", bundle: ..., traitCollection: ...)`
    static func ic_app_nika(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_app_nika, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ic_done_white", bundle: ..., traitCollection: ...)`
    static func ic_done_white(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_done_white, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ic_exit_to_app_white_36pt", bundle: ..., traitCollection: ...)`
    static func ic_exit_to_app_white_36pt(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_exit_to_app_white_36pt, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ic_remove_red_eye", bundle: ..., traitCollection: ...)`
    static func ic_remove_red_eye(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_remove_red_eye, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "search", bundle: ..., traitCollection: ...)`
    static func search(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.search, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 4 reuse identifiers.
  struct reuseIdentifier {
    /// Reuse identifier `customerCells`.
    static let customerCells: Rswift.ReuseIdentifier<CustomerTableViewCell> = Rswift.ReuseIdentifier(identifier: "customerCells")
    /// Reuse identifier `productCells`.
    static let productCells: Rswift.ReuseIdentifier<UIKit.UITableViewCell> = Rswift.ReuseIdentifier(identifier: "productCells")
    /// Reuse identifier `provinceCells`.
    static let provinceCells: Rswift.ReuseIdentifier<UIKit.UITableViewCell> = Rswift.ReuseIdentifier(identifier: "provinceCells")
    /// Reuse identifier `storeCells`.
    static let storeCells: Rswift.ReuseIdentifier<UIKit.UITableViewCell> = Rswift.ReuseIdentifier(identifier: "storeCells")
    
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 5 view controllers.
  struct segue {
    /// This struct is generated for `CustomerTableViewController`, and contains static references to 1 segues.
    struct customerTableViewController {
      /// Segue identifier `toDetailCustomer`.
      static let toDetailCustomer: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, CustomerTableViewController, CustomerViewController> = Rswift.StoryboardSegueIdentifier(identifier: "toDetailCustomer")
      
      /// Optionally returns a typed version of segue `toDetailCustomer`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toDetailCustomer(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, CustomerTableViewController, CustomerViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.customerTableViewController.toDetailCustomer, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    /// This struct is generated for `LoginViewController`, and contains static references to 1 segues.
    struct loginViewController {
      /// Segue identifier `toMainView`.
      static let toMainView: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, LoginViewController, UIKit.UINavigationController> = Rswift.StoryboardSegueIdentifier(identifier: "toMainView")
      
      /// Optionally returns a typed version of segue `toMainView`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toMainView(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, LoginViewController, UIKit.UINavigationController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.loginViewController.toMainView, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    /// This struct is generated for `MainViewController`, and contains static references to 2 segues.
    struct mainViewController {
      /// Segue identifier `toAdd`.
      static let toAdd: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, MainViewController, RegisterViewController> = Rswift.StoryboardSegueIdentifier(identifier: "toAdd")
      /// Segue identifier `toSearch`.
      static let toSearch: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, MainViewController, SearchCustomerViewController> = Rswift.StoryboardSegueIdentifier(identifier: "toSearch")
      
      /// Optionally returns a typed version of segue `toAdd`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toAdd(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, MainViewController, RegisterViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.mainViewController.toAdd, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `toSearch`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toSearch(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, MainViewController, SearchCustomerViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.mainViewController.toSearch, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    /// This struct is generated for `NewCustomerViewController`, and contains static references to 3 segues.
    struct newCustomerViewController {
      /// Segue identifier `toSelectProduct`.
      static let toSelectProduct: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, NewCustomerViewController, ProductTableViewController> = Rswift.StoryboardSegueIdentifier(identifier: "toSelectProduct")
      /// Segue identifier `toSelectProvince`.
      static let toSelectProvince: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, NewCustomerViewController, ProvinceTableViewController> = Rswift.StoryboardSegueIdentifier(identifier: "toSelectProvince")
      /// Segue identifier `toSelectStore`.
      static let toSelectStore: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, NewCustomerViewController, StoreTableViewController> = Rswift.StoryboardSegueIdentifier(identifier: "toSelectStore")
      
      /// Optionally returns a typed version of segue `toSelectProduct`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toSelectProduct(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, NewCustomerViewController, ProductTableViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.newCustomerViewController.toSelectProduct, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `toSelectProvince`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toSelectProvince(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, NewCustomerViewController, ProvinceTableViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.newCustomerViewController.toSelectProvince, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `toSelectStore`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toSelectStore(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, NewCustomerViewController, StoreTableViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.newCustomerViewController.toSelectStore, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    /// This struct is generated for `SearchCustomerViewController`, and contains static references to 1 segues.
    struct searchCustomerViewController {
      /// Segue identifier `toDataCustomer`.
      static let toDataCustomer: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, SearchCustomerViewController, CustomerTableViewController> = Rswift.StoryboardSegueIdentifier(identifier: "toDataCustomer")
      
      /// Optionally returns a typed version of segue `toDataCustomer`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func toDataCustomer(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, SearchCustomerViewController, CustomerTableViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.searchCustomerViewController.toDataCustomer, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.main)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 3 localization tables.
  struct string {
    /// This `R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      fileprivate init() {}
    }
    
    /// This `R.string.localizable` struct is generated, and contains static references to 23 localization keys.
    struct localizable {
      /// en translation: Address : %@
      /// 
      /// Locales: en, th
      static let address = Rswift.StringResource(key: "Address : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: CANCEL
      /// 
      /// Locales: en, th
      static let canceL = Rswift.StringResource(key: "CANCEL", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Car brand : %@
      /// 
      /// Locales: en, th
      static let carBrand = Rswift.StringResource(key: "Car brand : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Confirm
      /// 
      /// Locales: en, th
      static let confirm = Rswift.StringResource(key: "Confirm", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Confirm to create?
      /// 
      /// Locales: en, th
      static let confirmToCreate = Rswift.StringResource(key: "Confirm to create?", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Email : %@
      /// 
      /// Locales: en, th
      static let email = Rswift.StringResource(key: "Email : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: License plate number : %@
      /// 
      /// Locales: en, th
      static let licensePlateNumber = Rswift.StringResource(key: "License plate number : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Logout?
      /// 
      /// Locales: en, th
      static let logout = Rswift.StringResource(key: "Logout?", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Name : %@
      /// 
      /// Locales: en, th
      static let name = Rswift.StringResource(key: "Name : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: New Customer
      /// 
      /// Locales: en, th
      static let newCustomer = Rswift.StringResource(key: "New Customer", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: OK
      /// 
      /// Locales: en, th
      static let oK = Rswift.StringResource(key: "OK", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Password not match, Please try again.
      /// 
      /// Locales: en, th
      static let passwordNotMatchPleaseTryAgain = Rswift.StringResource(key: "Password not match, Please try again.", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Phone number : %@
      /// 
      /// Locales: en, th
      static let phoneNumber = Rswift.StringResource(key: "Phone number : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Product : %@
      /// 
      /// Locales: en, th
      static let product = Rswift.StringResource(key: "Product : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Product information
      /// 
      /// Locales: en, th
      static let productInformation = Rswift.StringResource(key: "Product information", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Province : %@
      /// 
      /// Locales: en, th
      static let province = Rswift.StringResource(key: "Province : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Result not found
      /// 
      /// Locales: en, th
      static let resultNotFound = Rswift.StringResource(key: "Result not found", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Search Customer
      /// 
      /// Locales: en, th
      static let searchCustomer = Rswift.StringResource(key: "Search Customer", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Select Product
      /// 
      /// Locales: en, th
      static let selectProduct = Rswift.StringResource(key: "Select Product", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Select Store
      /// 
      /// Locales: en, th
      static let selectStore = Rswift.StringResource(key: "Select Store", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Since : %@
      /// 
      /// Locales: en, th
      static let since = Rswift.StringResource(key: "Since : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Success
      /// 
      /// Locales: en, th
      static let success = Rswift.StringResource(key: "Success", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      /// en translation: Surname : %@
      /// 
      /// Locales: en, th
      static let surname = Rswift.StringResource(key: "Surname : %@", tableName: "Localizable", bundle: R.hostingBundle, locales: ["en", "th"], comment: nil)
      
      /// en translation: Address : %@
      /// 
      /// Locales: en, th
      static func address(_ value1: String) -> String {
        return String(format: NSLocalizedString("Address : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: CANCEL
      /// 
      /// Locales: en, th
      static func canceL(_: Void = ()) -> String {
        return NSLocalizedString("CANCEL", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Car brand : %@
      /// 
      /// Locales: en, th
      static func carBrand(_ value1: String) -> String {
        return String(format: NSLocalizedString("Car brand : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: Confirm
      /// 
      /// Locales: en, th
      static func confirm(_: Void = ()) -> String {
        return NSLocalizedString("Confirm", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Confirm to create?
      /// 
      /// Locales: en, th
      static func confirmToCreate(_: Void = ()) -> String {
        return NSLocalizedString("Confirm to create?", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Email : %@
      /// 
      /// Locales: en, th
      static func email(_ value1: String) -> String {
        return String(format: NSLocalizedString("Email : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: License plate number : %@
      /// 
      /// Locales: en, th
      static func licensePlateNumber(_ value1: String) -> String {
        return String(format: NSLocalizedString("License plate number : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: Logout?
      /// 
      /// Locales: en, th
      static func logout(_: Void = ()) -> String {
        return NSLocalizedString("Logout?", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Name : %@
      /// 
      /// Locales: en, th
      static func name(_ value1: String) -> String {
        return String(format: NSLocalizedString("Name : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: New Customer
      /// 
      /// Locales: en, th
      static func newCustomer(_: Void = ()) -> String {
        return NSLocalizedString("New Customer", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: OK
      /// 
      /// Locales: en, th
      static func oK(_: Void = ()) -> String {
        return NSLocalizedString("OK", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Password not match, Please try again.
      /// 
      /// Locales: en, th
      static func passwordNotMatchPleaseTryAgain(_: Void = ()) -> String {
        return NSLocalizedString("Password not match, Please try again.", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Phone number : %@
      /// 
      /// Locales: en, th
      static func phoneNumber(_ value1: String) -> String {
        return String(format: NSLocalizedString("Phone number : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: Product : %@
      /// 
      /// Locales: en, th
      static func product(_ value1: String) -> String {
        return String(format: NSLocalizedString("Product : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: Product information
      /// 
      /// Locales: en, th
      static func productInformation(_: Void = ()) -> String {
        return NSLocalizedString("Product information", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Province : %@
      /// 
      /// Locales: en, th
      static func province(_ value1: String) -> String {
        return String(format: NSLocalizedString("Province : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: Result not found
      /// 
      /// Locales: en, th
      static func resultNotFound(_: Void = ()) -> String {
        return NSLocalizedString("Result not found", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Search Customer
      /// 
      /// Locales: en, th
      static func searchCustomer(_: Void = ()) -> String {
        return NSLocalizedString("Search Customer", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Select Product
      /// 
      /// Locales: en, th
      static func selectProduct(_: Void = ()) -> String {
        return NSLocalizedString("Select Product", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Select Store
      /// 
      /// Locales: en, th
      static func selectStore(_: Void = ()) -> String {
        return NSLocalizedString("Select Store", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Since : %@
      /// 
      /// Locales: en, th
      static func since(_ value1: String) -> String {
        return String(format: NSLocalizedString("Since : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// en translation: Success
      /// 
      /// Locales: en, th
      static func success(_: Void = ()) -> String {
        return NSLocalizedString("Success", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: Surname : %@
      /// 
      /// Locales: en, th
      static func surname(_ value1: String) -> String {
        return String(format: NSLocalizedString("Surname : %@", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      fileprivate init() {}
    }
    
    /// This `R.string.main` struct is generated, and contains static references to 80 localization keys.
    struct main {
      /// th translation: Address
      /// 
      /// Locales: th
      static let bDMVq3KrPlaceholder = Rswift.StringResource(key: "bDM-vq-3Kr.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Address
      /// 
      /// Locales: th
      static let wcGQqLjpText = Rswift.StringResource(key: "wcG-qq-ljp.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Address : %s
      /// 
      /// Locales: th
      static let r6CHkYNIText = Rswift.StringResource(key: "R6C-hk-yNI.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Car brand
      /// 
      /// Locales: th
      static let aVRM5AzVText = Rswift.StringResource(key: "aVR-M5-azV.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Car brand
      /// 
      /// Locales: th
      static let xjyNcNYqPlaceholder = Rswift.StringResource(key: "XJY-nc-NYq.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Car brand : %s
      /// 
      /// Locales: th
      static let zL0FAWNLText = Rswift.StringResource(key: "zL0-fA-WNL.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Email
      /// 
      /// Locales: th
      static let oIhSWYoaText = Rswift.StringResource(key: "oIh-sW-yoa.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Email
      /// 
      /// Locales: th
      static let obhMdFKQPlaceholder = Rswift.StringResource(key: "obh-md-fKQ.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Email : %s
      /// 
      /// Locales: th
      static let jwNBhJLzText = Rswift.StringResource(key: "jwN-bh-jLz.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: First name
      /// 
      /// Locales: th
      static let f4V5VUjText = Rswift.StringResource(key: "3f4-v5-VUj.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: First name
      /// 
      /// Locales: th
      static let xKhRZIYJPlaceholder = Rswift.StringResource(key: "xKh-RZ-IYJ.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Last name
      /// 
      /// Locales: th
      static let gYiHOFiHPlaceholder = Rswift.StringResource(key: "GYi-HO-fiH.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Last name
      /// 
      /// Locales: th
      static let odCO3JSzText = Rswift.StringResource(key: "odC-O3-JSz.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: License plate
      /// 
      /// Locales: th
      static let lisfef2mPlaceholder = Rswift.StringResource(key: "LIS-FE-f2m.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: License plate
      /// 
      /// Locales: th
      static let mpkY5TqcText = Rswift.StringResource(key: "mpk-Y5-Tqc.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: License plate number : %s
      /// 
      /// Locales: th
      static let mb864AXText = Rswift.StringResource(key: "1Mb-86-4AX.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: NEW CUSTOMER
      /// 
      /// Locales: th
      static let kd45UWzJNormalTitle = Rswift.StringResource(key: "Kd4-5U-WzJ.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Name : %s
      /// 
      /// Locales: th
      static let gThNWAv4Text = Rswift.StringResource(key: "gTh-nW-av4.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Phone number
      /// 
      /// Locales: th
      static let bCrTdJgrText = Rswift.StringResource(key: "bCr-Td-Jgr.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Phone number
      /// 
      /// Locales: th
      static let wBnYiIYkPlaceholder = Rswift.StringResource(key: "WBn-yi-iYk.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Phone number : %s
      /// 
      /// Locales: th
      static let nedNH71KText = Rswift.StringResource(key: "ned-NH-71K.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Please fill in the blank
      /// 
      /// Locales: th
      static let cIZLKGX0Text = Rswift.StringResource(key: "cIZ-lK-gX0.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Province
      /// 
      /// Locales: th
      static let kNv2nLQ3Placeholder = Rswift.StringResource(key: "KNv-2n-lQ3.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Province
      /// 
      /// Locales: th
      static let oHcOlOkBText = Rswift.StringResource(key: "oHc-Ol-OkB.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Province : %s
      /// 
      /// Locales: th
      static let dco16WQVText = Rswift.StringResource(key: "dco-16-WQV.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: SEARCH CUSTOMER
      /// 
      /// Locales: th
      static let gFZThH8BNormalTitle = Rswift.StringResource(key: "gFZ-th-H8B.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: Surname : %s
      /// 
      /// Locales: th
      static let x8WYnDNdText = Rswift.StringResource(key: "x8W-yn-DNd.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: TireShop
      /// 
      /// Locales: th
      static let dwq5uUFxTitle = Rswift.StringResource(key: "dwq-5u-uFx.title", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: TireShop
      /// 
      /// Locales: th
      static let eYqFM7USText = Rswift.StringResource(key: "EYq-fM-7US.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: TireShop
      /// 
      /// Locales: th
      static let gacGBBLqTitle = Rswift.StringResource(key: "Gac-GB-BLq.title", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: กรุณากรอกข้อมูลในช่องว่างให้ครบถ้วน
      /// 
      /// Locales: th
      static let fQ39aSUxText = Rswift.StringResource(key: "fQ3-9a-SUx.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: กรุณากรอกข้อมูลในช่องว่างให้ครบถ้วน
      /// 
      /// Locales: th
      static let qnRE2IioText = Rswift.StringResource(key: "QnR-e2-iio.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ข้อมูลลูกค้า
      /// 
      /// Locales: th
      static let x510R2D1Text = Rswift.StringResource(key: "x51-0R-2D1.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ค้นหา
      /// 
      /// Locales: th
      static let hChQ3EejNormalTitle = Rswift.StringResource(key: "hCh-q3-eej.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ค้นหาลูกค้า
      /// 
      /// Locales: th
      static let ul7KdZKxText = Rswift.StringResource(key: "ul7-Kd-ZKx.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ค้นหาลูกค้าเดิม
      /// 
      /// Locales: th
      static let wvhon37jText = Rswift.StringResource(key: "WVH-oN-37j.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: จังหวัด
      /// 
      /// Locales: th
      static let pO0JXTIText = Rswift.StringResource(key: "2pO-0J-xTI.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static let nNJD6oText = Rswift.StringResource(key: "18n-nJ-d6o.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static let pc2GyB0xPlaceholder = Rswift.StringResource(key: "Pc2-gy-b0x.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static let rF7JsxPlaceholder = Rswift.StringResource(key: "92r-F7-Jsx.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static let v2JI5TpjText = Rswift.StringResource(key: "V2J-i5-Tpj.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static let wcY61WcbText = Rswift.StringResource(key: "WcY-61-wcb.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static let y7ZJl5w8Placeholder = Rswift.StringResource(key: "Y7Z-Jl-5w8.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อผู้ใช้
      /// 
      /// Locales: th
      static let sHsTSEkTPlaceholder = Rswift.StringResource(key: "SHs-TS-EkT.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อผู้ใช้
      /// 
      /// Locales: th
      static let uMVXQUhnPlaceholder = Rswift.StringResource(key: "uMV-xQ-uhn.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ชื่อผู้ใช้
      /// 
      /// Locales: th
      static let yqrD8NDYText = Rswift.StringResource(key: "Yqr-d8-NDY.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static let hZV4N9OText = Rswift.StringResource(key: "7hZ-V4-N9O.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static let igKjAdXPlaceholder = Rswift.StringResource(key: "1Ig-Kj-adX.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static let pxbY7NPUText = Rswift.StringResource(key: "pxb-y7-NPU.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static let yyBE0XLXPlaceholder = Rswift.StringResource(key: "YyB-e0-xLX.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static let cdJZEBPLPlaceholder = Rswift.StringResource(key: "cdJ-zE-BPL.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static let lyx0RBc9Text = Rswift.StringResource(key: "LYX-0R-bc9.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static let o136mJqWText = Rswift.StringResource(key: "O13-6m-jqW.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static let qM1Z7x3Placeholder = Rswift.StringResource(key: "3qM-1Z-7x3.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static let st236hFPlaceholder = Rswift.StringResource(key: "6St-23-6hF.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static let y0eSFAxYText = Rswift.StringResource(key: "y0e-sF-AxY.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ป้ายทะเบียนรถยนต์
      /// 
      /// Locales: th
      static let v6m2BFS6Text = Rswift.StringResource(key: "v6m-2B-FS6.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ยกเลิก
      /// 
      /// Locales: th
      static let nJiY6FWnNormalTitle = Rswift.StringResource(key: "NJi-Y6-FWn.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ยี่ห้อรถยนต์
      /// 
      /// Locales: th
      static let a0bC97GaPlaceholder = Rswift.StringResource(key: "A0b-C9-7Ga.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ยี่ห้อรถยนต์
      /// 
      /// Locales: th
      static let xMfQv7JhText = Rswift.StringResource(key: "xMf-qv-7Jh.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ยืนยันรหัสผ่าน
      /// 
      /// Locales: th
      static let apUCBIzMText = Rswift.StringResource(key: "apU-cB-izM.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ยืนยันรหัสผ่าน
      /// 
      /// Locales: th
      static let h1rBfDhFPlaceholder = Rswift.StringResource(key: "h1r-Bf-DhF.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: รหัสผ่าน
      /// 
      /// Locales: th
      static let gzdGSDAjPlaceholder = Rswift.StringResource(key: "gzd-GS-dAj.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: รหัสผ่าน
      /// 
      /// Locales: th
      static let sTLVvVjgText = Rswift.StringResource(key: "sTL-Vv-vjg.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: รหัสผ่าน
      /// 
      /// Locales: th
      static let wEEG0MxlPlaceholder = Rswift.StringResource(key: "wEE-g0-mxl.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: รายชื่อลูกค้า
      /// 
      /// Locales: th
      static let muSTYFijText = Rswift.StringResource(key: "MuS-TY-fij.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ร้าน
      /// 
      /// Locales: th
      static let bOoVyXF0Text = Rswift.StringResource(key: "bOo-vy-XF0.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: ลงทะเบียนลูกค้าใหม่ ?
      /// 
      /// Locales: th
      static let uDGKLoiNormalTitle = Rswift.StringResource(key: "8uD-gK-Loi.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: สินค้า
      /// 
      /// Locales: th
      static let vbhPTGF0Text = Rswift.StringResource(key: "Vbh-pT-gF0.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: หมวดอักษร
      /// 
      /// Locales: th
      static let uleVwHkRPlaceholder = Rswift.StringResource(key: "ULE-vw-hkR.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: อีเมล
      /// 
      /// Locales: th
      static let hA10M9erText = Rswift.StringResource(key: "hA1-0M-9er.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: อีเมล
      /// 
      /// Locales: th
      static let l9tCuHZQText = Rswift.StringResource(key: "l9t-cu-HZQ.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เข้าสู่ระบบ
      /// 
      /// Locales: th
      static let jr3HyBH8NormalTitle = Rswift.StringResource(key: "jr3-Hy-BH8.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เบอร์โทรศัพท์
      /// 
      /// Locales: th
      static let koaGQBxuText = Rswift.StringResource(key: "koa-GQ-Bxu.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เบอร์โทรศัพท์
      /// 
      /// Locales: th
      static let oKbBhHtkText = Rswift.StringResource(key: "OKb-bh-Htk.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เพิ่มข้อมูลลูกค้าใหม่
      /// 
      /// Locales: th
      static let l5wGSXflTitle = Rswift.StringResource(key: "l5w-GS-Xfl.title", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เพิ่มลูกค้าใหม่
      /// 
      /// Locales: th
      static let xuBpTf3Text = Rswift.StringResource(key: "4Xu-bp-tf3.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เมนูการใช้งาน
      /// 
      /// Locales: th
      static let yy83CLRnText = Rswift.StringResource(key: "YY8-3C-lRn.text", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เลขทะเบียน
      /// 
      /// Locales: th
      static let lmT4rORLPlaceholder = Rswift.StringResource(key: "lmT-4r-ORL.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      /// th translation: เลือกสินค้า
      /// 
      /// Locales: th
      static let zPWIvOfnPlaceholder = Rswift.StringResource(key: "zPW-Iv-ofn.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["th"], comment: nil)
      
      /// th translation: Address
      /// 
      /// Locales: th
      static func bDMVq3KrPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("bDM-vq-3Kr.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Address
      /// 
      /// Locales: th
      static func wcGQqLjpText(_: Void = ()) -> String {
        return NSLocalizedString("wcG-qq-ljp.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Address : %s
      /// 
      /// Locales: th
      static func r6CHkYNIText(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("R6C-hk-yNI.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: Car brand
      /// 
      /// Locales: th
      static func aVRM5AzVText(_: Void = ()) -> String {
        return NSLocalizedString("aVR-M5-azV.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Car brand
      /// 
      /// Locales: th
      static func xjyNcNYqPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("XJY-nc-NYq.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Car brand : %s
      /// 
      /// Locales: th
      static func zL0FAWNLText(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("zL0-fA-WNL.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: Email
      /// 
      /// Locales: th
      static func oIhSWYoaText(_: Void = ()) -> String {
        return NSLocalizedString("oIh-sW-yoa.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Email
      /// 
      /// Locales: th
      static func obhMdFKQPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("obh-md-fKQ.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Email : %s
      /// 
      /// Locales: th
      static func jwNBhJLzText(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("jwN-bh-jLz.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: First name
      /// 
      /// Locales: th
      static func f4V5VUjText(_: Void = ()) -> String {
        return NSLocalizedString("3f4-v5-VUj.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: First name
      /// 
      /// Locales: th
      static func xKhRZIYJPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("xKh-RZ-IYJ.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Last name
      /// 
      /// Locales: th
      static func gYiHOFiHPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("GYi-HO-fiH.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Last name
      /// 
      /// Locales: th
      static func odCO3JSzText(_: Void = ()) -> String {
        return NSLocalizedString("odC-O3-JSz.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: License plate
      /// 
      /// Locales: th
      static func lisfef2mPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("LIS-FE-f2m.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: License plate
      /// 
      /// Locales: th
      static func mpkY5TqcText(_: Void = ()) -> String {
        return NSLocalizedString("mpk-Y5-Tqc.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: License plate number : %s
      /// 
      /// Locales: th
      static func mb864AXText(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("1Mb-86-4AX.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: NEW CUSTOMER
      /// 
      /// Locales: th
      static func kd45UWzJNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("Kd4-5U-WzJ.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Name : %s
      /// 
      /// Locales: th
      static func gThNWAv4Text(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("gTh-nW-av4.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: Phone number
      /// 
      /// Locales: th
      static func bCrTdJgrText(_: Void = ()) -> String {
        return NSLocalizedString("bCr-Td-Jgr.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Phone number
      /// 
      /// Locales: th
      static func wBnYiIYkPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("WBn-yi-iYk.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Phone number : %s
      /// 
      /// Locales: th
      static func nedNH71KText(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("ned-NH-71K.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: Please fill in the blank
      /// 
      /// Locales: th
      static func cIZLKGX0Text(_: Void = ()) -> String {
        return NSLocalizedString("cIZ-lK-gX0.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Province
      /// 
      /// Locales: th
      static func kNv2nLQ3Placeholder(_: Void = ()) -> String {
        return NSLocalizedString("KNv-2n-lQ3.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Province
      /// 
      /// Locales: th
      static func oHcOlOkBText(_: Void = ()) -> String {
        return NSLocalizedString("oHc-Ol-OkB.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Province : %s
      /// 
      /// Locales: th
      static func dco16WQVText(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("dco-16-WQV.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: SEARCH CUSTOMER
      /// 
      /// Locales: th
      static func gFZThH8BNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("gFZ-th-H8B.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: Surname : %s
      /// 
      /// Locales: th
      static func x8WYnDNdText(_ value1: UnsafePointer<unichar>) -> String {
        return String(format: NSLocalizedString("x8W-yn-DNd.text", tableName: "Main", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
      }
      
      /// th translation: TireShop
      /// 
      /// Locales: th
      static func dwq5uUFxTitle(_: Void = ()) -> String {
        return NSLocalizedString("dwq-5u-uFx.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: TireShop
      /// 
      /// Locales: th
      static func eYqFM7USText(_: Void = ()) -> String {
        return NSLocalizedString("EYq-fM-7US.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: TireShop
      /// 
      /// Locales: th
      static func gacGBBLqTitle(_: Void = ()) -> String {
        return NSLocalizedString("Gac-GB-BLq.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: กรุณากรอกข้อมูลในช่องว่างให้ครบถ้วน
      /// 
      /// Locales: th
      static func fQ39aSUxText(_: Void = ()) -> String {
        return NSLocalizedString("fQ3-9a-SUx.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: กรุณากรอกข้อมูลในช่องว่างให้ครบถ้วน
      /// 
      /// Locales: th
      static func qnRE2IioText(_: Void = ()) -> String {
        return NSLocalizedString("QnR-e2-iio.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ข้อมูลลูกค้า
      /// 
      /// Locales: th
      static func x510R2D1Text(_: Void = ()) -> String {
        return NSLocalizedString("x51-0R-2D1.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ค้นหา
      /// 
      /// Locales: th
      static func hChQ3EejNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("hCh-q3-eej.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ค้นหาลูกค้า
      /// 
      /// Locales: th
      static func ul7KdZKxText(_: Void = ()) -> String {
        return NSLocalizedString("ul7-Kd-ZKx.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ค้นหาลูกค้าเดิม
      /// 
      /// Locales: th
      static func wvhon37jText(_: Void = ()) -> String {
        return NSLocalizedString("WVH-oN-37j.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: จังหวัด
      /// 
      /// Locales: th
      static func pO0JXTIText(_: Void = ()) -> String {
        return NSLocalizedString("2pO-0J-xTI.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static func nNJD6oText(_: Void = ()) -> String {
        return NSLocalizedString("18n-nJ-d6o.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static func pc2GyB0xPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("Pc2-gy-b0x.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static func rF7JsxPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("92r-F7-Jsx.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static func v2JI5TpjText(_: Void = ()) -> String {
        return NSLocalizedString("V2J-i5-Tpj.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static func wcY61WcbText(_: Void = ()) -> String {
        return NSLocalizedString("WcY-61-wcb.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อ
      /// 
      /// Locales: th
      static func y7ZJl5w8Placeholder(_: Void = ()) -> String {
        return NSLocalizedString("Y7Z-Jl-5w8.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อผู้ใช้
      /// 
      /// Locales: th
      static func sHsTSEkTPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("SHs-TS-EkT.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อผู้ใช้
      /// 
      /// Locales: th
      static func uMVXQUhnPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("uMV-xQ-uhn.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ชื่อผู้ใช้
      /// 
      /// Locales: th
      static func yqrD8NDYText(_: Void = ()) -> String {
        return NSLocalizedString("Yqr-d8-NDY.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static func hZV4N9OText(_: Void = ()) -> String {
        return NSLocalizedString("7hZ-V4-N9O.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static func igKjAdXPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("1Ig-Kj-adX.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static func pxbY7NPUText(_: Void = ()) -> String {
        return NSLocalizedString("pxb-y7-NPU.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ที่อยู่
      /// 
      /// Locales: th
      static func yyBE0XLXPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("YyB-e0-xLX.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static func cdJZEBPLPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("cdJ-zE-BPL.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static func lyx0RBc9Text(_: Void = ()) -> String {
        return NSLocalizedString("LYX-0R-bc9.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static func o136mJqWText(_: Void = ()) -> String {
        return NSLocalizedString("O13-6m-jqW.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static func qM1Z7x3Placeholder(_: Void = ()) -> String {
        return NSLocalizedString("3qM-1Z-7x3.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static func st236hFPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("6St-23-6hF.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: นามสกุล
      /// 
      /// Locales: th
      static func y0eSFAxYText(_: Void = ()) -> String {
        return NSLocalizedString("y0e-sF-AxY.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ป้ายทะเบียนรถยนต์
      /// 
      /// Locales: th
      static func v6m2BFS6Text(_: Void = ()) -> String {
        return NSLocalizedString("v6m-2B-FS6.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ยกเลิก
      /// 
      /// Locales: th
      static func nJiY6FWnNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("NJi-Y6-FWn.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ยี่ห้อรถยนต์
      /// 
      /// Locales: th
      static func a0bC97GaPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("A0b-C9-7Ga.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ยี่ห้อรถยนต์
      /// 
      /// Locales: th
      static func xMfQv7JhText(_: Void = ()) -> String {
        return NSLocalizedString("xMf-qv-7Jh.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ยืนยันรหัสผ่าน
      /// 
      /// Locales: th
      static func apUCBIzMText(_: Void = ()) -> String {
        return NSLocalizedString("apU-cB-izM.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ยืนยันรหัสผ่าน
      /// 
      /// Locales: th
      static func h1rBfDhFPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("h1r-Bf-DhF.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: รหัสผ่าน
      /// 
      /// Locales: th
      static func gzdGSDAjPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("gzd-GS-dAj.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: รหัสผ่าน
      /// 
      /// Locales: th
      static func sTLVvVjgText(_: Void = ()) -> String {
        return NSLocalizedString("sTL-Vv-vjg.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: รหัสผ่าน
      /// 
      /// Locales: th
      static func wEEG0MxlPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("wEE-g0-mxl.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: รายชื่อลูกค้า
      /// 
      /// Locales: th
      static func muSTYFijText(_: Void = ()) -> String {
        return NSLocalizedString("MuS-TY-fij.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ร้าน
      /// 
      /// Locales: th
      static func bOoVyXF0Text(_: Void = ()) -> String {
        return NSLocalizedString("bOo-vy-XF0.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: ลงทะเบียนลูกค้าใหม่ ?
      /// 
      /// Locales: th
      static func uDGKLoiNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("8uD-gK-Loi.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: สินค้า
      /// 
      /// Locales: th
      static func vbhPTGF0Text(_: Void = ()) -> String {
        return NSLocalizedString("Vbh-pT-gF0.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: หมวดอักษร
      /// 
      /// Locales: th
      static func uleVwHkRPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("ULE-vw-hkR.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: อีเมล
      /// 
      /// Locales: th
      static func hA10M9erText(_: Void = ()) -> String {
        return NSLocalizedString("hA1-0M-9er.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: อีเมล
      /// 
      /// Locales: th
      static func l9tCuHZQText(_: Void = ()) -> String {
        return NSLocalizedString("l9t-cu-HZQ.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เข้าสู่ระบบ
      /// 
      /// Locales: th
      static func jr3HyBH8NormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("jr3-Hy-BH8.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เบอร์โทรศัพท์
      /// 
      /// Locales: th
      static func koaGQBxuText(_: Void = ()) -> String {
        return NSLocalizedString("koa-GQ-Bxu.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เบอร์โทรศัพท์
      /// 
      /// Locales: th
      static func oKbBhHtkText(_: Void = ()) -> String {
        return NSLocalizedString("OKb-bh-Htk.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เพิ่มข้อมูลลูกค้าใหม่
      /// 
      /// Locales: th
      static func l5wGSXflTitle(_: Void = ()) -> String {
        return NSLocalizedString("l5w-GS-Xfl.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เพิ่มลูกค้าใหม่
      /// 
      /// Locales: th
      static func xuBpTf3Text(_: Void = ()) -> String {
        return NSLocalizedString("4Xu-bp-tf3.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เมนูการใช้งาน
      /// 
      /// Locales: th
      static func yy83CLRnText(_: Void = ()) -> String {
        return NSLocalizedString("YY8-3C-lRn.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เลขทะเบียน
      /// 
      /// Locales: th
      static func lmT4rORLPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("lmT-4r-ORL.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// th translation: เลือกสินค้า
      /// 
      /// Locales: th
      static func zPWIvOfnPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("zPW-Iv-ofn.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try main.validate()
    }
    
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct main: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = LoginViewController
      
      let bundle = R.hostingBundle
      let login = StoryboardViewControllerResource<LoginViewController>(identifier: "Login")
      let mainNavigation = StoryboardViewControllerResource<UIKit.UINavigationController>(identifier: "MainNavigation")
      let mainViewController = StoryboardViewControllerResource<MainViewController>(identifier: "MainViewController")
      let name = "Main"
      
      func login(_: Void = ()) -> LoginViewController? {
        return UIKit.UIStoryboard(resource: self).instantiateViewController(withResource: login)
      }
      
      func mainNavigation(_: Void = ()) -> UIKit.UINavigationController? {
        return UIKit.UIStoryboard(resource: self).instantiateViewController(withResource: mainNavigation)
      }
      
      func mainViewController(_: Void = ()) -> MainViewController? {
        return UIKit.UIStoryboard(resource: self).instantiateViewController(withResource: mainViewController)
      }
      
      static func validate() throws {
        if UIKit.UIImage(named: "all-customer") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'all-customer' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "ic_app_nika") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ic_app_nika' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "search") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'search' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "add-user") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'add-user' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "ic_done_white") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ic_done_white' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "ic_remove_red_eye") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ic_remove_red_eye' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "ic_exit_to_app_white_36pt") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ic_exit_to_app_white_36pt' is used in storyboard 'Main', but couldn't be loaded.") }
        if _R.storyboard.main().login() == nil { throw Rswift.ValidationError(description:"[R.swift] ViewController with identifier 'login' could not be loaded from storyboard 'Main' as 'LoginViewController'.") }
        if _R.storyboard.main().mainViewController() == nil { throw Rswift.ValidationError(description:"[R.swift] ViewController with identifier 'mainViewController' could not be loaded from storyboard 'Main' as 'MainViewController'.") }
        if _R.storyboard.main().mainNavigation() == nil { throw Rswift.ValidationError(description:"[R.swift] ViewController with identifier 'mainNavigation' could not be loaded from storyboard 'Main' as 'UIKit.UINavigationController'.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
